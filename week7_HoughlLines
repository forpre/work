#include <iostream>
#include <opencv2/opencv.hpp>
using namespace cv;
using namespace std;

int main()
{
	Mat dstMat;
	Mat srcMat = imread("D:\\picture\\18.jpg", 1);
	Mat buffMat = imread("D:\\picture\\18.jpg", 0);
	Mat lineMat;

	//canny边缘检测
	Canny(buffMat,dstMat,20,200,3,false);
	//标准霍夫变换检测在同一直线的点
	HoughLines(dstMat,lineMat,1,CV_PI/180,90);

	//在srcMat上根据点连线
	for (int i = 0; i < lineMat.rows; i++)
	{
		float rho = lineMat.at<Vec2f>(i,0)[0];
		float theta = lineMat.at<Vec2f>(i,0)[1];

		Point pt1, pt2;
		double a = cos(theta);
		double b = sin(theta);

		double x0 = a*rho;
		double y0 = b*rho;

		pt1.x = saturate_cast<int>(x0 + 1000 * (-b));
		pt1.y = saturate_cast<int>(y0 + 1000 * (a));
		pt2.x = saturate_cast<int>(x0 - 1000 * (-b));
		pt2.y = saturate_cast<int>(y0 - 1000 * (a));

		line(srcMat,pt1,pt2,Scalar(0,255,255),1,LINE_AA);
	}
	imshow("srcMat", srcMat);
	imshow("dstMat",dstMat);
	waitKey(0);
}
